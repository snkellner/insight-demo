- hosts: localhost
  gather_facts: false
  vars:
    ontap: &ontap
      hostname:       "{{ netapp_hostname }}"
      username:       "{{ netapp_username }}"
      password:       "{{ netapp_password }}"
      https:          true
      validate_certs: false
  vars_files:
    - var_demo.yml
  collections:
    - netapp.ontap
  tasks:
    - name: Create Policy
      na_ontap_export_policy:
        state: present
        name: "{{ item.name }}"
        vserver: "{{ item.vserver }}"
        <<: *ontap
      with_items:
        "{{ nas }}"
      when: item.protocol == "nfs"
    - name: Setup rules
      na_ontap_export_policy_rule:
        state: present
        policy_name: "{{ item.name }}"
        vserver: "{{ item.vserver }}"
        client_match: "{{ item.client }}"
        ro_rule: "{{ item.ro }}"
        rw_rule: "{{ item.rw }}"
        super_user_security: "{{ item.su }}"
        allow_suid: true
        protocol: "{{ item.protocol }}"
        <<: *ontap
      with_items:
        "{{ nas }}"
      when: item.protocol == "nfs"
    - name: Create volume
      na_ontap_volume:
        state: present
        name: "{{ item.name }}"
        aggregate_name: "{{ item.aggr }}"
        size: "{{ item.size }}"
        size_unit: gb
        policy: "{{ 'default' if item.protocol.lower() == 'cifs' else item.name }}"
        junction_path: "/{{ item.name }}"
        space_guarantee: "none"
        percent_snapshot_space: "{{ item.percent_snapshot_space }}"
        snapshot_policy: "{{ item.snapshot_policy }}"
        vserver: "{{ item.vserver }}"
        <<: *ontap
      with_items:
        "{{ nas }}"
    - name: Create DNS on primary SVM
      na_ontap_dns:
        state: present
        vserver: "{{ src_vserver }}"
        domains: "{{ ad_domain }}"
        nameservers: "{{ nameserver }}"
        <<: *ontap
    - name: Create CIFS server
      na_ontap_cifs_server:
        state: present
        name: "{{ src_vserver }}"
        vserver: "{{ src_vserver }}"
        service_state: started
        domain: "{{ ad_domain }}"
        admin_user_name: "{{ ad_user }}"
        admin_password: "{{ netapp_password }}"
        <<: *ontap
    - name: Create Share
      na_ontap_cifs:
        state: present
        share_name: "{{ item.share }}"
        path: "/{{ item.name }}"
        vserver: "{{ item.vserver }}"
        <<: *ontap
      with_items:
        "{{ nas }}"
      when: item.share is defined
